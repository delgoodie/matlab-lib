function [x,tbl] = muller(f, a, b, c, es)
    ea = 100;
    i = 1;
    x0 = a;
    x1 = b;
    x2 = c;
    x = c;
    while ea > es && i < 200
        h0 = x1 - x0;
        h1 = x2 - x1;
        d0 = (f(x1) - f(x0)) / h0;
        d1 = (f(x2) - f(x1)) / h1;
        c1 = (d1 - d0) / (h1 + h0);
        c2 = c1 * h1 + d1;
        c3 = f(x2);
        
        x = x2 


        x = x - func(x) * (x - x0) / (func(x) - func(x0));
        if i > 1
            ea = abs((x - prevx) / x)*100;
            tbl(i,:) = array2table([i, fval, dfval, x, ea]);
        else
            tbl = array2table([i, fval, dfval, x, ea]);
        end
        x0 = prevx;
        i = i + 1;
    end
    tbl.Properties.VariableNames=["iteration", "f(x)", "~df(x)/dx", "x", "ea"];    
end